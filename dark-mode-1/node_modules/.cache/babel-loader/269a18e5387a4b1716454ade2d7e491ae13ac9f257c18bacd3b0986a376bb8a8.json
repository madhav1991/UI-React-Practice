{"ast":null,"code":"var _jsxFileName = \"/Users/mperi/Documents/Projects/UI-React-Practice/dark-mode-1/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n  useEffect(() => {\n    const defaultMode = localStorage.getItem(\"dark-mode\") === true;\n    setDarkMode(defaultMode);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [darkMode ? 'Dark Mode' : 'Light Mode', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        children: \"Toggle Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jxWvogfm97D9w3+yMzVp/epPJCw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","darkMode","setDarkMode","document","body","classList","add","remove","defaultMode","localStorage","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mperi/Documents/Projects/UI-React-Practice/dark-mode-1/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(()=> {\n    if(darkMode){\n      document.body.classList.add('dark-mode');\n    }\n    else {\n      document.body.classList.remove('dark-mode');\n    }\n\n  },[darkMode])\n\n  useEffect(()=> {\n    const defaultMode = localStorage.getItem(\"dark-mode\") === true;\n    setDarkMode(defaultMode);\n  },)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>{darkMode ? 'Dark Mode' : 'Light Mode'} </h1>\n        <button onClick={()=> setDarkMode(!darkMode)}>\n          Toggle Dark Mode\n        </button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAK;IACb,IAAGK,QAAQ,EAAC;MACVE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C,CAAC,MACI;MACHH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC7C;EAEF,CAAC,EAAC,CAACN,QAAQ,CAAC,CAAC;EAEbL,SAAS,CAAC,MAAK;IACb,MAAMY,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI;IAC9DR,WAAW,CAACM,WAAW,CAAC;EAC1B,CAAE,CAAC;EACH,oBACEV,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA;MAAQa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bd,OAAA;QAAAc,QAAA,GAAKX,QAAQ,GAAG,WAAW,GAAG,YAAY,EAAC,GAAC;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjDlB,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAKf,WAAW,CAAC,CAACD,QAAQ,CAAE;QAAAW,QAAA,EAAC;MAE9C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChB,EAAA,CA5BQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}